/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.github.lgdd.liferay.commerce.transport.events.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the TransportEvent service. Represents a row in the &quot;CommerceDemo_TransportEvent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.github.lgdd.liferay.commerce.transport.events.model.impl.TransportEventModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.github.lgdd.liferay.commerce.transport.events.model.impl.TransportEventImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TransportEvent
 * @generated
 */
@ProviderType
public interface TransportEventModel
	extends BaseModel<TransportEvent>, GroupedModel, ShardedModel,
			StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a transport event model instance should use the {@link TransportEvent} interface instead.
	 */

	/**
	 * Returns the primary key of this transport event.
	 *
	 * @return the primary key of this transport event
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this transport event.
	 *
	 * @param primaryKey the primary key of this transport event
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this transport event.
	 *
	 * @return the uuid of this transport event
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this transport event.
	 *
	 * @param uuid the uuid of this transport event
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the transport event ID of this transport event.
	 *
	 * @return the transport event ID of this transport event
	 */
	public long getTransportEventId();

	/**
	 * Sets the transport event ID of this transport event.
	 *
	 * @param transportEventId the transport event ID of this transport event
	 */
	public void setTransportEventId(long transportEventId);

	/**
	 * Returns the commerce shipment ID of this transport event.
	 *
	 * @return the commerce shipment ID of this transport event
	 */
	public long getCommerceShipmentId();

	/**
	 * Sets the commerce shipment ID of this transport event.
	 *
	 * @param commerceShipmentId the commerce shipment ID of this transport event
	 */
	public void setCommerceShipmentId(long commerceShipmentId);

	/**
	 * Returns the group ID of this transport event.
	 *
	 * @return the group ID of this transport event
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this transport event.
	 *
	 * @param groupId the group ID of this transport event
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this transport event.
	 *
	 * @return the company ID of this transport event
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this transport event.
	 *
	 * @param companyId the company ID of this transport event
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this transport event.
	 *
	 * @return the user ID of this transport event
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this transport event.
	 *
	 * @param userId the user ID of this transport event
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this transport event.
	 *
	 * @return the user uuid of this transport event
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this transport event.
	 *
	 * @param userUuid the user uuid of this transport event
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this transport event.
	 *
	 * @return the user name of this transport event
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this transport event.
	 *
	 * @param userName the user name of this transport event
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this transport event.
	 *
	 * @return the create date of this transport event
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this transport event.
	 *
	 * @param createDate the create date of this transport event
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this transport event.
	 *
	 * @return the modified date of this transport event
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this transport event.
	 *
	 * @param modifiedDate the modified date of this transport event
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the carrier of this transport event.
	 *
	 * @return the carrier of this transport event
	 */
	@AutoEscape
	public String getCarrier();

	/**
	 * Sets the carrier of this transport event.
	 *
	 * @param carrier the carrier of this transport event
	 */
	public void setCarrier(String carrier);

	/**
	 * Returns the tracking number of this transport event.
	 *
	 * @return the tracking number of this transport event
	 */
	@AutoEscape
	public String getTrackingNumber();

	/**
	 * Sets the tracking number of this transport event.
	 *
	 * @param trackingNumber the tracking number of this transport event
	 */
	public void setTrackingNumber(String trackingNumber);

	/**
	 * Returns the expected date of this transport event.
	 *
	 * @return the expected date of this transport event
	 */
	public Date getExpectedDate();

	/**
	 * Sets the expected date of this transport event.
	 *
	 * @param expectedDate the expected date of this transport event
	 */
	public void setExpectedDate(Date expectedDate);

	/**
	 * Returns the shipping date of this transport event.
	 *
	 * @return the shipping date of this transport event
	 */
	public Date getShippingDate();

	/**
	 * Sets the shipping date of this transport event.
	 *
	 * @param shippingDate the shipping date of this transport event
	 */
	public void setShippingDate(Date shippingDate);

	/**
	 * Returns the status of this transport event.
	 *
	 * @return the status of this transport event
	 */
	public int getStatus();

	/**
	 * Sets the status of this transport event.
	 *
	 * @param status the status of this transport event
	 */
	public void setStatus(int status);

	/**
	 * Returns the commerce account name of this transport event.
	 *
	 * @return the commerce account name of this transport event
	 */
	@AutoEscape
	public String getCommerceAccountName();

	/**
	 * Sets the commerce account name of this transport event.
	 *
	 * @param commerceAccountName the commerce account name of this transport event
	 */
	public void setCommerceAccountName(String commerceAccountName);

	@Override
	public TransportEvent cloneWithOriginalValues();

}